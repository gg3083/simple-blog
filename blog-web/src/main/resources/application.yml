# Server settings
server:
    port: 8443
    # HTTP请求和响应头的最大量，以字节为单位，默认值为4096字节,超过此长度的部分不予处理,一般8K。解决java.io.EOFException: null问题
    max-http-header-size: 8192
    use-forward-headers: true
    compression:
        enabled: true
        min-response-size: 1024
        mime-types: text/plain,text/css,text/xml,text/javascript,application/json,application/javascript,application/xml,application/xml+rss,application/x-javascript,application/x-httpd-php,image/jpeg,image/gif,image/png
    tomcat:
        remote-ip-header: X-Forwarded-for
        protocol-header: X-Forwarded-Proto
        port-header: X-Forwarded-Port
        uri-encoding: UTF-8
# SPRING PROFILES
spring:
    application:
        name: blog-web
    freemarker:
        allow-request-override: false
        allow-session-override: false
        cache: false
        charset: UTF-8
        check-template-location: true
        content-type: text/html
        enabled: true
        expose-request-attributes: false
        expose-session-attributes: false
        expose-spring-macro-helpers: true
        prefer-file-system-access: true
        suffix: .ftl
        template-loader-path: classpath:/templates/
        settings:
            template_update_delay: 0
            default_encoding: UTF-8
            classic_compatible: true
    # HTTP ENCODING
    servlet:
        multipart:
            max-file-size: 50MB
            max-request-size: 50MB
    http:
        encoding:
            enabled: true
            charset: UTF-8
            force: true
    messages:
        encoding: UTF-8
    jmx:
        enabled: true
        default-domain: agentservice
    resources:
        chain:
            strategy:
                content:
                    enabled: true
                    paths: /**
    banner:
        charset: UTF-8
    main:
        allow-bean-definition-overriding: true
    mail:
        default-encoding: UTF-8
        # 指定SMTP server使用的协议，默认为: smtp
        protocol: smtp
        # 指定SMTP server host.
        host: xxx
        port: 465
        # 指定SMTP server的用户名.
        username: xxx
        # 指定SMTP server登录密码:
        password: xxx
        # 指定是否在启动时测试邮件服务器连接，默认为false
        test-connection: false
        properties:
            mail.smtp.auth: true
            # 腾讯企业邮箱 下两个配置必须！！！
            mail.smtp.ssl.enable: true
            mail.smtp.socketFactory.class: javax.net.ssl.SSLSocketFactory
            mail.smtp.socketFactory.port: 465
            mail.smtp.starttls.enable: true
            mail.smtp.starttls.required: true
            mail.smtp.connectiontimeout: 50000
            mail.smtp.timeout: 30000
            mail.smtp.writetimeout: 50000
    # Redis数据库索引（默认为0）
    redis:
        jedis:
            pool:
                # 连接池最大连接数（使用负值表示没有限制）
                max-active: 8
                # 连接池最大阻塞等待时间（使用负值表示没有限制）
                max-wait: -1ms
                # 连接池中的最大空闲连接
                max-idle: 8
                # 连接池中的最小空闲连接
                min-idle: 0
        # 连接超时时间（毫秒）
        timeout: 5000ms
        # 默认的数据过期时间，主要用于shiro权限管理
        expire: 2592000
# MyBatis
mybatis:
    type-aliases-package: cn.gg3083.blog.persistence.beans
    mapper-locations: classpath:/mybatis/*.xml
# mapper
mapper:
    mappers:
        - cn.gg3083.blog.plugin.BaseMapper
    not-empty: false
    identity: MYSQL
# pagehelper
pagehelper:
    helper-dialect: mysql
    reasonable: true
    support-methods-arguments: true
    params: count=countSql

braum:
    limit:
        access:
            type: redis
            threshold: 15
            interval: 5000
####################################自定义配置##########################################
app:
    # 是否启用kaptcha验证码
    enableKaptcha: false
    # 启用后，项目在启动时会打印数据库（Mysql和Redis）链接信息（包含密码）
    # 代码请参考
    enabledConfigLog: true

me:
    zhyd:
        oauth:
            gitee:
                clientId:
                clientSecret:
                redirectUri:
            github:
                clientId:
                clientSecret:
                redirectUri:
            weibo:
                clientId:
                clientSecret:
                redirectUri:
            dingtalk:
                clientId:
                clientSecret:
                redirectUri:
            baidu:
                clientId:
                clientSecret:
                redirectUri:
            coding:
                clientId:
                clientSecret:
                redirectUri:
            tencentCloud:
                clientId:
                clientSecret:
                redirectUri:
            oschina:
                clientId:
                clientSecret:
                redirectUri:
            alipay:
                clientId:
                clientSecret:
                redirectUri:
                alipayPublicKey:
            qq:
                clientId:
                clientSecret:
                redirectUri:
            wechat:
                clientId:
                clientSecret:
                redirectUri:
            taobao:
                clientId:
                clientSecret:
                redirectUri:
            google:
                clientId:
                clientSecret:
                redirectUri:
            facebook:
                clientId:
                clientSecret:
                redirectUri:

#---
#spring:
#  profiles:
#    include: dev
#---
#spring:
#    profiles:
#        include: pro
####################################自定义配置##########################################